server:
  bind_address: "0.0.0.0:8080"
  worker_threads: 4
  debug: false
  max_connections: 10000
  connection_timeout: "30s"
  keep_alive_timeout: "60s"
  graceful_shutdown_timeout: "30s"
  tls:
    cert_path: "certs/server.crt"
    key_path: "certs/server.key"
    require_client_cert: false

ssl:
  enabled: true
  auto_ssl:
    enabled: true
    domains:
      - "gateway.example.com"
      - "*.api.example.com"
    email: "admin@example.com"
    staging: false
    renewal_threshold_days: 30
    challenge_type: "http-01"
    challenge_port: 80
  certificate:
    storage_backend: "database"  # "database", "vault", "filesystem"
    cache_directory: "/etc/gateway/certificates"
    watch_external_updates: true
    auto_reload: true
    reload_interval: "300s"
  vault:
    address: "https://vault.example.com:8200"
    token: "${VAULT_TOKEN}"
    mount_path: "secret"
    certificate_path: "certificates"
    skip_verify: false
    timeout: "30s"
    auth_method:
      method_type: "token"
      config: {}
  acme:
    directory_url: "https://acme-v02.api.letsencrypt.org/directory"
    contact_email: "admin@example.com"
    terms_of_service_agreed: true
    key_type: "ecdsa256"
    challenge_timeout: "300s"
    propagation_timeout: "120s"
    dns_providers: {}

ingress:
  enabled: true
  namespace: null  # Watch all namespaces if null
  ingress_class: "gateway"
  watch_all_namespaces: true
  default_backend_protocol: "http"
  default_ssl_redirect: false
  annotations:
    backend_protocol: "gateway.io/backend-protocol"
    ssl_redirect: "gateway.io/ssl-redirect"
    rate_limit: "gateway.io/rate-limit"
    auth_type: "gateway.io/auth-type"
    plugins: "gateway.io/plugins"
    upstream_timeout: "gateway.io/upstream-timeout"
    load_balancer: "gateway.io/load-balancer"
    circuit_breaker: "gateway.io/circuit-breaker"
    cors: "gateway.io/cors"
    compression: "gateway.io/compression"

waf:
  enabled: true
  rules_path: "config/waf-rules.yaml"
  rate_limiting:
    enabled: true
    requests_per_minute: 1000
    burst_limit: 100
    window_size: "60s"
    storage_backend: "memory"
  ip_whitelist: []
  ip_blacklist:
    - "192.168.1.100"
    - "10.0.0.0/8"
  blocked_headers:
    - "X-Malicious-Header"
  blocked_user_agents:
    - "BadBot/1.0"
    - "MaliciousScanner"
  max_request_size: 10485760  # 10MB
  block_malicious_ips: true

cache:
  enabled: true
  backend: "memory"
  ttl: "300s"
  max_size: 104857600  # 100MB
  compression: true
  redis:
    url: "redis://localhost:6379"
    pool_size: 10
    timeout: "5s"
    cluster: false

database:
  enabled: false
  backend: "postgres"
  url: "postgresql://gateway:password@localhost:5432/gateway"
  pool_size: 10
  timeout: "30s"
  migrations_path: "migrations"
  ssl_mode: "prefer"

auth:
  enabled: false
  jwt_secret: "your-secret-key-change-in-production"
  jwt_expiry: "3600s"
  require_auth: false
  public_paths:
    - "/health"
    - "/metrics"
    - "/api/public"
  providers: {}

monitoring:
  enabled: true
  metrics_port: 9090
  log_level: "info"
  health_check_path: "/health"
  prometheus:
    enabled: true
    endpoint: "/metrics"
    namespace: "gateway"
  tracing:
    enabled: false
    endpoint: "http://localhost:14268/api/traces"
    sample_rate: 0.1

plugins:
  enabled: false
  plugin_dir: "plugins"
  plugins: {}

upstream:
  backends:
    - name: "backend-1"
      address: "http://localhost:3000"
      weight: 1
      health_check_path: "/health"
      max_connections: 100
      timeout: "30s"
    - name: "backend-2"
      address: "http://localhost:3001"
      weight: 1
      health_check_path: "/health"
      max_connections: 100
      timeout: "30s"
  
  load_balancing:
    algorithm: "round_robin"
    sticky_sessions: false
    session_cookie: "JSESSIONID"
  
  health_check:
    enabled: true
    interval: "30s"
    timeout: "5s"
    retries: 3
    path: "/health"
    expected_status: 200
  
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    timeout: "60s"
    half_open_max_calls: 3