syntax = "proto3";

package gateway_worker;

import "certificate.proto";
import "configuration.proto";
import "log_processing.proto";

// Main Gateway-Worker communication service
service GatewayWorkerService {
  // Health check for service discovery
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  
  // Certificate management
  rpc GetCertificate(CertificateRequest) returns (CertificateResponse);
  rpc UpdateCertificate(UpdateCertificateRequest) returns (UpdateCertificateResponse);
  rpc WatchCertificateUpdates(CertificateWatchRequest) returns (stream CertificateUpdate);
  
  // Configuration management
  rpc GetConfiguration(ConfigurationRequest) returns (ConfigurationResponse);
  rpc UpdateConfiguration(UpdateConfigurationRequest) returns (UpdateConfigurationResponse);
  rpc WatchConfigurationUpdates(ConfigurationWatchRequest) returns (stream ConfigurationUpdate);
  
  // Log processing
  rpc SendLogs(stream LogEntry) returns (LogProcessingResponse);
  rpc GetMetrics(MetricsRequest) returns (MetricsResponse);
}

// Health check messages
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
}

// Metrics messages
message MetricsRequest {
  string gateway_id = 1;
  int64 timestamp_from = 2;
  int64 timestamp_to = 3;
}